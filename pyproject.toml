[tool.poetry]
name = "brainwave"
version = "0.1.0"
description = "Django 5, React, Bootstrap 5 with Python 3 and webpack project boilerplate"
authors = ["Vinta Software <contact@vinta.com.br>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"

# Django is our web server
Django = "^5.0"
django-model-utils = "^4.3.1"
django-webpack-loader = "^3.0.0"
django-js-reverse = "^0.10.2"
django-import-export = "^3.3.5"
djangorestframework = "^3.14.0"
django-debreach = "^2.1.0"
python-decouple = "^3.8"
brotlipy = "^0.7.0"
django-log-request-id = "^2.1.0"
gunicorn = "^21.2.0"
whitenoise = "^6.6.0"
drf-yasg = "^1.21.7"

# Celery is our job queue
celery = {extras = ["redis"], version = "^5.3.6"}
celery-redbeat = "^2.1.1"

# Database stuff
psycopg2 = "^2.9.9"
dj-database-url = "^2.1.0"

# Packaging / command stuff
psutil = "^5.9.7"
sentry-sdk = "^1.39.1"
setuptools = "^69.0.2"
click = "^8.1.7"

# Data stuff
jsonlines = "^4.0.0"
stringcase = "^1.2.0"
PyYAML = "^6.0.1"
polars = "^0.20.3"
more-itertools = "^10.1.0"

# Stuff for web requests
requests = "^2.31.0"
requests_ratelimiter = "^0.4.2"

[tool.poetry.group.dev.dependencies]
coverage = "^7.2.7"
ipython = "^8.18.1"
model-bakery = "^1.12.0"
pre-commit = "^3.3.3"
pylint-django = "^2.5.3"
pytest = "^7.4.4"
pytest-django = "^4.7.0"
pytest_httpserver = "^1.0.8"
pytest-mock = "^3.12.0"
pytest-sugar = "^0.9.7"
pytest-watcher = "^0.3.4"
ruff = "^0.3.4"
pyright = "^1.1.345"
ipdb = "^0.13.13"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pep8-naming
    "N",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-bandit
    "S",
    # flake8-blind-except
    "BLE",
    # flake8-builtins
    "A",
    # flake8-django
    "DJ",
    # isort
    "I",
    # flake8-logging-format
    "G",
    # flake8-no-pep420
    "INP",
    # Ruff-specific rules
    "RUF"
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "virtualenvs",
]
ignore = [
  # Disable eradicate (commented code removal)
  "ERA001",
  # Disable Conflicting lint rules,
  # see https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "W191",
  "E501",
  "E111",
  "E117",
  "D206",
  "D300",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "COM812",
  "COM819",
  "ISC001",
  "ISC002",
  # Disable unused `noqa` directive
  "RUF100",
]
line-length = 100
indent-width = 4
target-version = "py312"
# Allow unused variables when underscore-prefixed:
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "django", "third-party", "first-party", "local-folder"]
lines-after-imports = 2

[tool.ruff.lint.isort.sections]
# Group all Django imports into a separate section.
"django" = ["django"]

[tool.ruff.per-file-ignores]
# Ignore "E402", "F403", "F405" (import violations) in __init__.py files.
# Ignore "S" (flake8-bandit) and "N802" (function name should be lowercase) in tests and docs.
# Ignore "RUF" (Ruff-specific rules) and "I" (isort) in migrations.
"__init__.py" = ["E402", "F403", "F405"]
"**/{tests,docs}/*" = ["E402", "F403", "F405", "S", "N802"]
"**/*test*.py" = ["E402", "F403", "F405", "S", "N802"]
"**/{settings}/*" = ["E402", "F403", "F405"]
"**/migrations/*" = ["RUF", "I"]

[tool.coverage.run]
branch = true
source = ["backend"]
omit = ["**/venv/*", "**/env/*", "**/virtualenvs/*", "**/node_modules/*", "**/migrations/*", "**/settings/*", "**/tests/*"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "brainwave.settings.local_base"
pythonpath = [".", "backend"]
python_files = ["test_*.py", "*_test.py", "tests/*.py"]

[tool.pyright]
exclude = ["**/tests","**/migrations", "**/models.py"]
